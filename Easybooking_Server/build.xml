<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="help" name="EasyBooking_Server">
	<property environment="env" />
	<property name="source.dir" location="src" />
	<property name="build.dir" location="bin" />
	<property name="lib.dir" location="lib" />
	<property name="resources.dir" location="resources" />
	<property name="dist.dir" location="dist" />
	<property name="classpath" location="bin" />
	<property name="export.file" value="EasybookingManager.jar" />
	<property name="server.port" value="1099" />
	<property name="server.IP" value="127.0.0.1" />
	<property name="socket.ip" value="127.0.0.1" />
	<property name="socket.port" value="35600" />
	<property name="server.Name" value="EasyBookingServer" />
	<property name="server.Name1" value="AutentificacionServer" />
	<property name="server.Name2" value="LufthansaServer" />
	<property name="server.Name3" value="Lufthansa" />
	<property name="server.Name4" value="Iberia" />
	<property name="server.Name5" value="Allairline" />
	<property name="policy.file" location="security/java.policy" />

	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${build.dir}" />
		<pathelement location="${resources.dir}" />
	</path>

	<target name="help">
		<echo>Usage: ant [build | export | server ]</echo>
	</target>

	<!-- TARGET : clean -->
	<target name="clean">
		<delete includeEmptyDirs="true" quiet="true">
			<fileset dir="${build.dir}" includes="**/*.*" />
		</delete>
		<delete dir="${build.dir}" />
	</target>

	<!-- TARGET : prepare -->
	<target name="prepare">
		<mkdir dir="${build.dir}" />
	</target>

	<!-- TARGET : compile -->
	<target name="compile" depends="clean, prepare">
		<javac srcdir="${source.dir}" destdir="${build.dir}" classpathref="classpath" includeantruntime="no">
			<include name="**/*.java" />
		</javac>
	</target>

	<!-- TARGET : enhance -->
	<target name="enhance" depends="compile">
		<taskdef name="enhancer" classpathref="classpath" classname="org.datanucleus.enhancer.EnhancerTask" />
		<enhancer classpathref="classpath" failonerror="true">
			<sysproperty key="log4j.configuration" value="file:${resources.dir}/log4j.properties" />
			<fileset dir="${build.dir}">
				<include name="**/*.class" />
			</fileset>
		</enhancer>
	</target>

	<!-- TARGET : SchemaTool "create" -->
	<target name="createschema" depends="enhance">
		<taskdef name="schematool" classpathref="classpath" classname="org.datanucleus.store.schema.SchemaToolTask" />
		<schematool mode="create" classpathref="classpath" failonerror="true" props="datanucleus.properties">
			<sysproperty key="log4j.configuration" value="file:${resources.dir}/log4j.properties" />
			<fileset dir="${build.dir}">
				<include name="**/*.class" />
			</fileset>
		</schematool>
	</target>

	<!-- TARGET : SchemaTool "delete" -->
	<target name="deleteschema">
		<taskdef name="schematool" classpathref="classpath" classname="org.datanucleus.store.schema.SchemaToolTask" />
		<schematool mode="delete" classpathref="classpath" failonerror="true" props="datanucleus.properties">
			<sysproperty key="log4j.configuration" value="file:${resources.dir}/log4j.properties" />
			<fileset dir="${build.dir}">
				<include name="**/*.class" />
			</fileset>
		</schematool>
	</target>


	<!-- SchemaTool "dbinfo" -->
	<target name="schemainfo">
		<taskdef name="schematool" classpathref="classpath" classname="org.datanucleus.store.schema.SchemaToolTask" />
		<schematool mode="dbinfo" classpathref="classpath" failonerror="true" props="datanucleus.properties">
			<sysproperty key="log4j.configuration" value="file:${resources.dir}/log4j.properties" />
			<fileset dir="${build.dir}">
				<include name="**/*.class" />
			</fileset>
		</schematool>
	</target>

	<!-- TARGET : Run -->
	<target name="run" depends="createschema">
		<java classname="es.deusto.ingenieria.sd.eb.server.EasybookingServer" classpathref="classpath" fork="true">
			<jvmarg value="-Dlog4j.configuration=log4j.properties" />
		</java>
	</target>

	<target name="build" description="Builds the project">
		<delete dir="${build.dir}" />
		<mkdir dir="${build.dir}" />
		<javac srcdir="${source.dir}" destdir="${build.dir}" classpathref="classpath" deprecation="true" fork="true" includeantruntime="no" />
	</target>

	<target name="export" depends="build" description="Export the project into a .jar file">
		<delete dir="${dist.dir}" />
		<mkdir dir="${dist.dir}" />
		<jar destfile="${dist.dir}/${export.file}" basedir="${build.dir}" includes="**/IEasyBookingManager.class, **/**DTO.class, **/EBAssembler.class" />
	</target>

	<target name="runServer1" depends="build" description="Runs Server program">
		<java classname="es.deusto.ingenieria.sd.eb.server.EasybookingServer" classpathref="classpath" fork="true">
			<jvmarg value="-Djava.rmi.server.codebase=file:${build.dir}/" />
			<jvmarg value="-Djava.security.policy=${policy.file}" />
			<jvmarg value="-Dlog4j.configuration=log4j.properties" />
			<arg value="${server.IP}" />
			<arg value="${server.port}" />
			<arg value="${server.Name}" />
			<arg value="${server.Name1}" />
			<arg value="${server.Name2}" />
			<arg value="${socket.ip}" />
			<arg value="${socket.port}" />
			<arg value="${server.Name3}" />
			<arg value="${server.Name4}" />
			<arg value="${server.Name5}" />
		</java>
	</target>

	<target name="runServer2" depends="createschema" description="Runs Server program">
		<java classname="es.deusto.ingenieria.sd.eb.server.EasybookingServer" classpathref="classpath" fork="true">
			<jvmarg value="-Djava.rmi.server.codebase=file:${build.dir}/" />
			<jvmarg value="-Djava.security.policy=${policy.file}" />
			<jvmarg value="-Dlog4j.configuration=log4j.properties" />
			<arg value="${server.IP}" />
			<arg value="${server.port}" />
			<arg value="${server.Name}" />
			<arg value="${server.Name1}" />
			<arg value="${server.Name2}" />
			<arg value="${socket.ip}" />
			<arg value="${socket.port}" />
			<arg value="${server.Name3}" />
			<arg value="${server.Name4}" />
			<arg value="${server.Name5}" />
		</java>
	</target>
</project>